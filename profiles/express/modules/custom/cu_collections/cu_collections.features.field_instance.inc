<?php
/**
 * @file
 * cu_collections.features.field_instance.inc
 */

/**
 * Implements hook_field_default_field_instances().
 */
function cu_collections_field_default_field_instances() {
  $field_instances = array();

  // Exported field_instance:
  // 'bean-collection_grid-field_collection_display_summary'.
  $field_instances['bean-collection_grid-field_collection_display_summary'] = array(
    'bundle' => 'collection_grid',
    'default_value' => array(
      0 => array(
        'value' => 'hide',
      ),
    ),
    'default_value_function' => '',
    'default_value_php' => FALSE,
    'deleted' => 0,
    'description' => 'You can choose whether or no to include a truncated version of body field text of the collection items.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 2,
      ),
    ),
    'entity_type' => 'bean',
    'fences_wrapper' => 'no_wrapper',
    'field_name' => 'field_collection_display_summary',
    'label' => 'Display Summary',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_select',
      'weight' => 9,
    ),
  );

  // Exported field_instance:
  // 'bean-collection_grid-field_collection_filter_effect'.
  $field_instances['bean-collection_grid-field_collection_filter_effect'] = array(
    'bundle' => 'collection_grid',
    'default_value' => array(
      0 => array(
        'value' => 'fade',
      ),
    ),
    'default_value_function' => '',
    'default_value_php' => '',
    'deleted' => 0,
    'description' => 'Select how filtered items are displayed for desktop and tablet users. The remove option is applied for mobile users regardless of the setting.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 5,
      ),
    ),
    'entity_type' => 'bean',
    'fences_wrapper' => 'no_wrapper',
    'field_name' => 'field_collection_filter_effect',
    'label' => 'Filter Effect',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_buttons',
      'weight' => 10,
    ),
  );

  // Exported field_instance:
  // 'bean-collection_grid-field_collection_filter_type'.
  $field_instances['bean-collection_grid-field_collection_filter_type'] = array(
    'bundle' => 'collection_grid',
    'default_value' => array(
      0 => array(
        'value' => 'links',
      ),
    ),
    'default_value_function' => '',
    'default_value_php' => '',
    'deleted' => 0,
    'description' => 'Links appear in a row above the grid as clickable buttons. Select list appears as a dropdown above the grid.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'bean',
    'fences_wrapper' => 'no_wrapper',
    'field_name' => 'field_collection_filter_type',
    'label' => 'Filter Type',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_select',
      'weight' => 8,
    ),
  );

  // Exported field_instance:
  // 'bean-collection_grid-field_collection_grid_category'.
  $field_instances['bean-collection_grid-field_collection_grid_category'] = array(
    'bundle' => 'collection_grid',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Selecting more than one category will automatically add a filter for the displayed items',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 4,
      ),
    ),
    'entity_type' => 'bean',
    'fences_wrapper' => 'no_wrapper',
    'field_name' => 'field_collection_grid_category',
    'label' => 'Category',
    'required' => 0,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_buttons',
      'weight' => 7,
    ),
  );

  // Exported field_instance: 'bean-collection_grid-field_collection_grid_type'.
  $field_instances['bean-collection_grid-field_collection_grid_type'] = array(
    'bundle' => 'collection_grid',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'You must add all types of collections you want to display in the collection grid. If you leave a type off of the list, it won\'t display in the grid even if it is tagged with a category that is included.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 3,
      ),
    ),
    'entity_type' => 'bean',
    'fences_wrapper' => 'no_wrapper',
    'field_name' => 'field_collection_grid_type',
    'label' => 'Type',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_buttons',
      'weight' => 6,
    ),
  );

  // Exported field_instance: 'node-collection_item-field_collection_body'.
  $field_instances['node-collection_item-field_collection_body'] = array(
    'bundle' => 'collection_item',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 0,
      ),
      'grid' => array(
        'label' => 'hidden',
        'module' => 'smart_trim',
        'settings' => array(
          'more_link' => 0,
          'more_text' => 'Read more',
          'summary_handler' => 'full',
          'trim_length' => 50,
          'trim_link' => 0,
          'trim_options' => array(
            'text' => 'text',
          ),
          'trim_preserve_tags' => '',
          'trim_suffix' => '...',
          'trim_type' => 'words',
        ),
        'type' => 'smart_trim_format',
        'weight' => 1,
      ),
      'teaser' => array(
        'label' => 'hidden',
        'module' => 'smart_trim',
        'settings' => array(
          'more_link' => 0,
          'more_text' => 'Read more',
          'summary_handler' => 'full',
          'trim_length' => 50,
          'trim_link' => 0,
          'trim_options' => array(
            'text' => 'text',
          ),
          'trim_preserve_tags' => '',
          'trim_suffix' => '...',
          'trim_type' => 'words',
        ),
        'type' => 'smart_trim_format',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'fences_wrapper' => 'div_div_div',
    'field_name' => 'field_collection_body',
    'label' => 'Body',
    'required' => 0,
    'settings' => array(
      'linkit' => array(
        'button_text' => 'Search',
        'enable' => 0,
        'profile' => '',
      ),
      'text_processing' => 1,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 5,
      ),
      'type' => 'text_textarea',
      'weight' => 2,
    ),
  );

  // Exported field_instance: 'node-collection_item-field_collection_category'.
  $field_instances['node-collection_item-field_collection_category'] = array(
    'bundle' => 'collection_item',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Categories of collection type, such as major, minor, certificate, etc. A collection item can have multiple categories.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 6,
      ),
      'grid' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 6,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 5,
      ),
    ),
    'entity_type' => 'node',
    'fences_wrapper' => 'no_wrapper',
    'field_name' => 'field_collection_category',
    'label' => 'Category',
    'required' => 0,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'taxonomy',
      'settings' => array(
        'autocomplete_path' => 'taxonomy/autocomplete',
        'size' => 60,
      ),
      'type' => 'taxonomy_autocomplete',
      'weight' => 7,
    ),
  );

  // Exported field_instance: 'node-collection_item-field_collection_image'.
  $field_instances['node-collection_item-field_collection_image'] = array(
    'bundle' => 'collection_item',
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 3,
      ),
      'grid' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 4,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 4,
      ),
    ),
    'entity_type' => 'node',
    'fences_wrapper' => 'div_div_div',
    'field_name' => 'field_collection_image',
    'label' => 'Photo',
    'required' => 0,
    'settings' => array(
      'alt_field' => 1,
      'default_image' => 0,
      'file_directory' => 'collection-image',
      'file_extensions' => 'png gif jpg jpeg',
      'max_filesize' => '',
      'max_resolution' => '',
      'min_resolution' => '',
      'title_field' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'image',
      'settings' => array(
        'insert' => 1,
        'insert_absolute' => FALSE,
        'insert_class' => '',
        'insert_default' => 'auto',
        'insert_styles' => array(
          'auto' => 'auto',
          'colorbox__backstretch' => 0,
          'colorbox__el_hero' => 0,
          'colorbox__email_ad' => 0,
          'colorbox__email_ad_large' => 0,
          'colorbox__email_feature_thumbnail' => 0,
          'colorbox__email_feature_thumbnail_large' => 0,
          'colorbox__email_large' => 0,
          'colorbox__email_medium' => 0,
          'colorbox__email_teaser_thumbnail' => 0,
          'colorbox__flexslider_full' => 0,
          'colorbox__flexslider_thumbnail' => 0,
          'colorbox__focal_point_preview' => 0,
          'colorbox__hero' => 0,
          'colorbox__large' => 0,
          'colorbox__large_square_thumbnail' => 0,
          'colorbox__large_wide_thumbnail' => 0,
          'colorbox__linkit_thumb' => 0,
          'colorbox__medium' => 0,
          'colorbox__preview' => 0,
          'colorbox__slider' => 0,
          'colorbox__slider-large' => 0,
          'colorbox__slider-medium' => 0,
          'colorbox__small' => 'colorbox__small',
          'colorbox__small_square_thumbnail' => 'colorbox__small_square_thumbnail',
          'colorbox__small_thumbnail' => 'colorbox__small_thumbnail',
          'colorbox__square' => 0,
          'colorbox__square_thumbnail' => 'colorbox__square_thumbnail',
          'colorbox__thumbnail' => 0,
          'icon_link' => 0,
          'image' => 0,
          'image_backstretch' => 0,
          'image_el_hero' => 0,
          'image_email_ad' => 0,
          'image_email_ad_large' => 0,
          'image_email_feature_thumbnail' => 0,
          'image_email_feature_thumbnail_large' => 0,
          'image_email_large' => 0,
          'image_email_medium' => 0,
          'image_email_teaser_thumbnail' => 0,
          'image_flexslider_full' => 0,
          'image_flexslider_thumbnail' => 0,
          'image_focal_point_preview' => 0,
          'image_hero' => 'image_hero',
          'image_large' => 'image_large',
          'image_large_square_thumbnail' => 'image_large_square_thumbnail',
          'image_large_wide_thumbnail' => 'image_large_wide_thumbnail',
          'image_linkit_thumb' => 0,
          'image_medium' => 'image_medium',
          'image_preview' => 0,
          'image_slider' => 'image_slider',
          'image_slider-large' => 0,
          'image_slider-medium' => 0,
          'image_small' => 'image_small',
          'image_small_square_thumbnail' => 0,
          'image_small_thumbnail' => 0,
          'image_square' => 0,
          'image_square_thumbnail' => 'image_square_thumbnail',
          'image_thumbnail' => 'image_thumbnail',
          'link' => 0,
        ),
        'insert_width' => '',
        'preview_image_style' => 'thumbnail',
        'progress_indicator' => 'throbber',
      ),
      'type' => 'image_image',
      'weight' => 4,
    ),
  );

  // Exported field_instance: 'node-collection_item-field_collection_preview'.
  $field_instances['node-collection_item-field_collection_preview'] = array(
    'bundle' => 'collection_item',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'A short, preview of the collection item content. A summarized version of the body field will be used if this field is empty.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 1,
      ),
      'grid' => array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 0,
      ),
      'teaser' => array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'node',
    'fences_wrapper' => 'no_wrapper',
    'field_name' => 'field_collection_preview',
    'label' => 'Preview',
    'required' => 0,
    'settings' => array(
      'linkit' => array(
        'button_text' => 'Search',
        'enable' => 0,
        'profile' => '',
      ),
      'text_processing' => 1,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 5,
      ),
      'type' => 'text_textarea',
      'weight' => 3,
    ),
  );

  // Exported field_instance: 'node-collection_item-field_collection_thumbnail'.
  $field_instances['node-collection_item-field_collection_thumbnail'] = array(
    'bundle' => 'collection_item',
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 4,
      ),
      'grid' => array(
        'label' => 'hidden',
        'module' => 'image',
        'settings' => array(
          'image_link' => 'content',
          'image_style' => 'large_wide_thumbnail',
        ),
        'type' => 'image',
        'weight' => 2,
      ),
      'teaser' => array(
        'label' => 'hidden',
        'module' => 'image',
        'settings' => array(
          'image_link' => 'content',
          'image_style' => 'square',
        ),
        'type' => 'image',
        'weight' => 2,
      ),
    ),
    'entity_type' => 'node',
    'fences_wrapper' => 'div_div_div',
    'field_name' => 'field_collection_thumbnail',
    'label' => 'Thumbnail',
    'required' => 0,
    'settings' => array(
      'alt_field' => 1,
      'default_image' => 0,
      'file_directory' => 'collection-thumbnail',
      'file_extensions' => 'png gif jpg jpeg',
      'max_filesize' => '',
      'max_resolution' => '',
      'min_resolution' => '',
      'title_field' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'image',
      'settings' => array(
        'insert' => 0,
        'insert_absolute' => FALSE,
        'insert_class' => '',
        'insert_default' => 'auto',
        'insert_styles' => array(
          'auto' => 'auto',
          'colorbox__backstretch' => 0,
          'colorbox__el_hero' => 0,
          'colorbox__email_ad' => 0,
          'colorbox__email_ad_large' => 0,
          'colorbox__email_feature_thumbnail' => 0,
          'colorbox__email_feature_thumbnail_large' => 0,
          'colorbox__email_large' => 0,
          'colorbox__email_medium' => 0,
          'colorbox__email_teaser_thumbnail' => 0,
          'colorbox__flexslider_full' => 0,
          'colorbox__flexslider_thumbnail' => 0,
          'colorbox__focal_point_preview' => 0,
          'colorbox__hero' => 0,
          'colorbox__large' => 0,
          'colorbox__large_square_thumbnail' => 0,
          'colorbox__large_wide_thumbnail' => 0,
          'colorbox__linkit_thumb' => 0,
          'colorbox__medium' => 0,
          'colorbox__preview' => 0,
          'colorbox__slider' => 0,
          'colorbox__slider-large' => 0,
          'colorbox__slider-medium' => 0,
          'colorbox__small' => 0,
          'colorbox__small_square_thumbnail' => 0,
          'colorbox__small_thumbnail' => 0,
          'colorbox__square' => 0,
          'colorbox__square_thumbnail' => 0,
          'colorbox__thumbnail' => 0,
          'icon_link' => 0,
          'image' => 0,
          'image_backstretch' => 0,
          'image_el_hero' => 0,
          'image_email_ad' => 0,
          'image_email_ad_large' => 0,
          'image_email_feature_thumbnail' => 0,
          'image_email_feature_thumbnail_large' => 0,
          'image_email_large' => 0,
          'image_email_medium' => 0,
          'image_email_teaser_thumbnail' => 0,
          'image_flexslider_full' => 0,
          'image_flexslider_thumbnail' => 0,
          'image_focal_point_preview' => 0,
          'image_hero' => 0,
          'image_large' => 0,
          'image_large_square_thumbnail' => 0,
          'image_large_wide_thumbnail' => 0,
          'image_linkit_thumb' => 0,
          'image_medium' => 0,
          'image_preview' => 0,
          'image_slider' => 0,
          'image_slider-large' => 0,
          'image_slider-medium' => 0,
          'image_small' => 0,
          'image_small_square_thumbnail' => 0,
          'image_small_thumbnail' => 0,
          'image_square' => 0,
          'image_square_thumbnail' => 0,
          'image_thumbnail' => 0,
          'link' => 0,
        ),
        'insert_width' => '',
        'preview_image_style' => 'thumbnail',
        'progress_indicator' => 'throbber',
      ),
      'type' => 'image_image',
      'weight' => 5,
    ),
  );

  // Exported field_instance: 'node-collection_item-field_collection_type'.
  $field_instances['node-collection_item-field_collection_type'] = array(
    'bundle' => 'collection_item',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Type of collection, such as program, scholarship, resource, etc. An item can only have one type.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 5,
      ),
      'grid' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 5,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 6,
      ),
    ),
    'entity_type' => 'node',
    'fences_wrapper' => 'no_wrapper',
    'field_name' => 'field_collection_type',
    'label' => 'Type',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'taxonomy',
      'settings' => array(
        'autocomplete_path' => 'taxonomy/autocomplete',
        'size' => 60,
      ),
      'type' => 'taxonomy_autocomplete',
      'weight' => 6,
    ),
  );

  // Translatables
  // Included for use with string extractors like potx.
  t('A short, preview of the collection item content. A summarized version of the body field will be used if this field is empty.');
  t('Body');
  t('Categories of collection type, such as major, minor, certificate, etc. A collection item can have multiple categories.');
  t('Category');
  t('Display Summary');
  t('Filter Effect');
  t('Filter Type');
  t('Links appear in a row above the grid as clickable buttons. Select list appears as a dropdown above the grid.');
  t('Photo');
  t('Preview');
  t('Select how filtered items are displayed for desktop and tablet users. The remove option is applied for mobile users regardless of the setting.');
  t('Selecting more than one category will automatically add a filter for the displayed items');
  t('Thumbnail');
  t('Type');
  t('Type of collection, such as program, scholarship, resource, etc. An item can only have one type.');
  t('You can choose whether or no to include a truncated version of body field text of the collection items.');
  t('You must add all types of collections you want to display in the collection grid. If you leave a type off of the list, it won\'t display in the grid even if it is tagged with a category that is included.');

  return $field_instances;
}
