<?php
/**
 * @file
 * Contains hooks for cu_core module.
 */

/**
 * Implements hook_module_implements_alter().
 *
 * @param array $implementations
 *   List of modules that implement hook.
 * @param string $hook
 *   Name of the hook being fired.
 */
function cu_core_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter' && isset($implementations['cu_core'])) {
    $group = $implementations['cu_core'];
    unset($implementations['cu_core']);
    $implementations['cu_core'] = $group;
  }
}

/**
 * Implements hook_form_FORM_ID_alter()
 *
 * Disable syslog form fields.
 *
 * @param  $form
 * @param  $form_state
 */
function cu_core_form_system_logging_settings_alter(&$form, &$form_state) {
  $form['syslog_identity']['#disabled'] = TRUE;
  $form['syslog_facility']['#disabled'] = TRUE;
  $form['syslog_format']['#disabled'] = TRUE;

  $form['reset_syslog_identity'] = array(
    '#type' => 'submit',
    '#value' => t('Rebuild syslog identity'),
    '#submit' => array('cu_core_rebuild_syslog_identity_submit'),
  );
}

function cu_core_rebuild_syslog_identity_submit(&$form, &$form_state) {
  $cu_sid = variable_get('cu_sid', '');
  if ($cu_sid) {
    // Current value
    $syslog_identity = 'drupal-' . $cu_sid;
  }
  else {
    $syslog_identity = 'drupal-no_sid';
  }
  variable_set('syslog_identity', $syslog_identity);
  drupal_set_message(t('Syslog identity has been set to "@syslogid"', array('@syslogid' => $syslog_identity)));
}

/**
 * Implements hook_form_alter().
 */
function cu_core_form_alter(&$form, $form_state, $form_id) {
  // Remove "Promote to front page."
  if (isset($form['type']) && isset($form['#node']) && $form['type']['#value'] .'_node_form' == $form_id) {
    unset($form['options']['promote']);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function cu_core_form_bean_form_alter(&$form, &$form_state, $form_id) {
  // Remove "Redirect URL" accordion on bean edit forms.
  $form['redirect']['#access'] = FALSE;

  // Move revision group to bottom of bean edit forms.
  $form['revision2'] = $form['revision'];
  $form['revision2']['#weight'] = 90;
  unset($form['revision']);
}

/**
 * Implements hook_modules_enabled().
 * Add shortcut link for context AFTER context_ui is enabled.
 */
function cu_core_modules_installed($modules) {
  if (in_array('context_ui', $modules)) {
    menu_rebuild();
    // Add context shortcut to shortcuts set.
    $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);
    $shortcut_set->links[] =
    array(
      'link_path' => 'admin/structure/context',
      'link_title' => t('Context'),
      'weight' => -14,
    );
    shortcut_set_save($shortcut_set);
  }
}

/**
 * Implements hook_express_node_list_groups().
 * Provided by express_add_content.api.php.
 */
function cu_core_express_node_list_groups($bundles) {
  $bundles['express_core']['title'] = 'Express Core';
  $bundles['express_core']['weight'] = -99;
  $bundles['express_core']['types'][] = 'Basic page';
  $bundles['express_core']['types'][] = 'File';
  $bundles['express_core']['types'][] = 'Frequently Asked Questions';

  $bundles['news']['title'] = 'News and Articles';
  $bundles['news']['types'][] = 'Article';
  $bundles['news']['types'][] = 'Article List Page';

  $bundles['people']['title'] = 'People';
  $bundles['people']['types'][] = 'Person';
  $bundles['people']['types'][] = 'People List Page';

  $bundles['photo']['title'] = 'Photo Gallery';
  $bundles['photo']['types'][] = 'Photo Gallery';

  $bundles['forms']['title'] = 'Forms';
  $bundles['forms']['types'][] = 'Webform';
  return $bundles;
}

/**
 * Implements hook_express_bean_list_groups().
 * Provided by express_add_content.api.php.
 */
function cu_core_express_bean_list_groups($bundles) {
  $bundles['express_core']['title'] = 'Express Core';
  $bundles['express_core']['weight'] = -99;
  $bundles['express_core']['types'][] = 'Hero Unit';
  $bundles['express_core']['types'][] = 'Slider';
  $bundles['express_core']['types'][] = 'Text Block';

  $bundles['news']['title'] = 'News and Articles';
  $bundles['news']['types'][] = 'Article List';
  $bundles['news']['types'][] = 'Article Feature';
  $bundles['news']['types'][] = 'Article Grid';
  $bundles['news']['types'][] = 'Article Slider';

  $bundles['people']['title'] = 'People';
  $bundles['people']['types'][] = 'People List Block';

  $bundles['events']['title'] = 'Events';
  $bundles['events']['types'][] = 'Events Calendar Block';
  $bundles['events']['types'][] = 'Events Calendar Grid';

  $bundles['social']['title'] = 'Social Media';
  $bundles['social']['types'][] = 'Social Links';
  $bundles['social']['types'][] = 'Facebook Activity';
  $bundles['social']['types'][] = 'Facebook Like Button';
  $bundles['social']['types'][] = 'Twitter Block';

  $bundles['advanced_content']['title'] = 'Advanced Content';
  $bundles['advanced_content']['types'][] = 'Content Grid';
  $bundles['advanced_content']['types'][] = 'Expandable';
  $bundles['advanced_content']['types'][] = 'Video Reveal';

  return $bundles;
}
/**
 * Alters admin structure menu page to hide link to 'Block administration'.
 */
function cu_core_page_alter(&$page) {
  if (!empty($page['help'])) {
    $message = $page['help']['system_help']['#markup'];
    $search = '/development/admin/structure/block';
    if (current_path() == 'admin/structure/menu' && (strpos($message, $search) !== false)) {
      unset($page['help']['system_help']);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Make sure that actiuons are at bottom of menu item form.
 */
function cu_core_form_menu_edit_item_alter(&$form, &$form_state, $form_id) {
  $form['actions']['#weight'] = 1000;
}

/**
 * Implements hook_permission().
 */
function cu_core_permission() {
  return array(
    'view express environment indicator' => array(
      'title' => t('View Express Environment Indicator'),
    ),
  );
}

function cu_core_preprocess_html(&$vars) {
  /**
   * Accepted values for displaying indicator (add as classes in classes_array variable:
   *
   * Environment:
   * environment-production/environment-test
   *
   * Infrastructure:
   * infrastructure-new/infrastructure-old
   *
   * Site Status:
   * status-launched/status-staged
   *
   * Migration
   * migrate-ready
   */
  global $user;
  if ($_SERVER['HTTP_HOST'] === 'www-test-new.colorado.edu' && $user->uid) {
    $vars['classes_array'][] = 'environment-test';
    $vars['classes_array'][] = 'infrastructure-new';
    $vars['classes_array'][] = 'status-launched';
    drupal_add_css(drupal_get_path('module', 'cu_core') . '/css/cu-core.css');
    drupal_add_js(drupal_get_path('module', 'cu_core') . '/js/cu-core-no-migrate.js');
  }

  if (user_access('view express environment indicator')) {
    $env = $_SERVER['HTTP_HOST'];
    //variable_get('atlas_status') == 'available'
    // @TODO: Need better detection of Valet sites
    drupal_add_css(drupal_get_path('module', 'cu_core') . '/css/cu-core.css');
    switch ($env) {
      case 'www.colorado.edu':
        if ($_ENV['OSR_ENV'] == 'master') {
          $vars['classes_array'][] = 'indicator-disabled';
        }
        else {
          $vars['classes_array'][] = 'environment-production';
          $vars['classes_array'][] = 'infrastructure-old';
          $vars['classes_array'][] = 'status-launched';
          drupal_add_js(drupal_get_path('module', 'cu_core') . '/js/cu-core-no-migrate.js');
        }
        break;
      case 'www-test.colorado.edu':
        if ($_ENV['OSR_ENV'] == 'test') {
          $vars['classes_array'][] = 'indicator-disabled';
        }
        else {
          $vars['classes_array'][] = 'environment-test';
          $vars['classes_array'][] = 'infrastructure-new';
          $vars['classes_array'][] = 'status-launched';
          drupal_add_js(drupal_get_path('module', 'cu_core') . '/js/cu-core-no-migrate.js');
        }
        break;
      case 'www-prod-new.colorado.edu':
        $vars['classes_array'][] = 'environment-production';
        $vars['classes_array'][] = 'infrastructure-new';
        $vars['classes_array'][] = 'status-launched';
        drupal_add_js(drupal_get_path('module', 'cu_core') . '/js/cu-core.js');
        break;
      case 'express.test':
        $vars['classes_array'][] = 'environment-test';
        $vars['classes_array'][] = 'infrastructure-new';
        $vars['classes_array'][] = 'status-launched';
        drupal_add_js(drupal_get_path('module', 'cu_core') . '/js/cu-core.js');
        break;
    }
  }

  drupal_add_css(drupal_get_path('module', 'cu_core') . '/css/cu-core.css');

  if (variable_get('site_404', '') === current_path()) {
    $vars['head_title'] = implode(' | ', array(
      t('Page not found'),
      variable_get('site_name'),
      t('University of Colorado Boulder'),
    ));
  }
}
