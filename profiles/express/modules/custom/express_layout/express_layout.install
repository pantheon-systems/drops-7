<?php

/**
 * Implements hook_schema().
 *
 * @return $schema array
 */
function express_layout_schema() {
  $schema = array();

  $schema['express_layout'] = array(
    'description' => 'The base table for layout entities.',
    'fields' => array(
      'layout_id' => array(
        'description' => 'Primary key for Layout Entities.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'Name of the Layout Entity',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'node_type' => array(
        'description' => 'Type of Node Layout is associated with',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('layout_id'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function express_layout_install() {

  // add fields to Layout entity
  include 'express_layout.field_bases.inc';
  include 'express_layout.field_instances.inc';
  include 'express_layout.admin.inc';

  $add = TRUE;
  _express_layout_variables($add);
  _express_layout_default_settings();
  express_attach_layouts();
}

/**
 * Implements hook_uninstall().
 */
function express_layout_uninstall() {

  $add = FALSE;
  _express_layout_variables($add);

  // Delete field instances related to Express Layout entity
  field_attach_delete_bundle('express_layout', 'express_layout');
}

/**
 * Function to add config variables for layout settings
 */
function _express_layout_variables($add = TRUE) {

  // Get all fields of entity
  $instances = field_info_instances('express_layout', 'express_layout');

  // Get all node types on site
  $node_types = node_type_get_names();
  $node_types = array_flip($node_types);

  // Loop through and add variable settings
  foreach ($node_types as $type) {
    $values = array();
    foreach ($instances as $instance) {
      $values[$instance['field_name']] = 1;
    }
    if ($add == TRUE) {
      variable_set('express_layout_settings_' . $type, $values);
    } else {
      variable_del('express_layout_settings_' . $type);
    }
  }
}

function _express_layout_default_settings() {
  $settings = array();
  $settings['express_layout_settings_article'] = array(
    'field_feature_layout_toggle' => 'field_feature_layout_toggle',
    'field_feature_title_image' => 0,
    'field_footer' => 'field_footer',
    'field_header' => 'field_header',
    'field_intro' => 'field_intro',
    'field_sidebar_first' => 'field_sidebar_first',
    'field_sidebar_second' => 'field_sidebar_second',
    'field_slider' => 'field_slider',
    'field_wide_2' => 'field_wide_2',
    'field_inner_content_left' => 0,
    'field_inner_content_right' => 0,
    'field_content_bottom' => 'field_content_bottom',
  );
  $settings['express_layout_settings_article_list_page'] = array(
    'field_feature_layout_toggle' => 0,
    'field_feature_title_image' => 0,
    'field_footer' => 'field_footer',
    'field_header' => 'field_header',
    'field_intro' => 'field_intro',
    'field_sidebar_first' => 'field_sidebar_first',
    'field_sidebar_second' => 'field_sidebar_second',
    'field_slider' => 'field_slider',
    'field_wide_2' => 'field_wide_2',
    'field_inner_content_left' => 0,
    'field_inner_content_right' => 0,
    'field_content_bottom' => 0,
  );
  $settings['express_layout_settings_article_list_page'] = array(
    'field_feature_layout_toggle' => 0,
    'field_feature_title_image' => 0,
    'field_footer' => 'field_footer',
    'field_header' => 'field_header',
    'field_intro' => 'field_intro',
    'field_sidebar_first' => 'field_sidebar_first',
    'field_sidebar_second' => 'field_sidebar_second',
    'field_slider' => 'field_slider',
    'field_wide_2' => 'field_wide_2',
    'field_inner_content_left' => 0,
    'field_inner_content_right' => 0,
    'field_content_bottom' => 0,
  );
  $settings['express_layout_settings_faqs'] = array(
    'field_feature_layout_toggle' => 0,
    'field_feature_title_image' => 0,
    'field_footer' => 'field_footer',
    'field_header' => 'field_header',
    'field_intro' => 'field_intro',
    'field_sidebar_first' => 'field_sidebar_first',
    'field_sidebar_second' => 'field_sidebar_second',
    'field_slider' => 'field_slider',
    'field_wide_2' => 'field_wide_2',
    'field_inner_content_left' => 0,
    'field_inner_content_right' => 0,
    'field_content_bottom' => 0,
  );
  $settings['express_layout_settings_file'] = array(
    'field_feature_layout_toggle' => 0,
    'field_feature_title_image' => 0,
    'field_footer' => 0,
    'field_header' => 0,
    'field_intro' => 0,
    'field_sidebar_first' => 0,
    'field_sidebar_second' => 0,
    'field_slider' => 0,
    'field_wide_2' => 0,
    'field_inner_content_left' => 0,
    'field_inner_content_right' => 0,
    'field_content_bottom' => 0,
  );
  $settings['express_layout_settings_page'] = array(
    'field_feature_layout_toggle' => 'field_feature_layout_toggle',
    'field_feature_title_image' => 0,
    'field_footer' => 'field_footer',
    'field_header' => 'field_header',
    'field_intro' => 'field_intro',
    'field_sidebar_first' => 'field_sidebar_first',
    'field_sidebar_second' => 'field_sidebar_second',
    'field_slider' => 'field_slider',
    'field_wide_2' => 'field_wide_2',
    'field_inner_content_left' => 'field_inner_content_left',
    'field_inner_content_right' => 'field_inner_content_right',
    'field_content_bottom' => 0,
  );
  $settings['express_layout_settings_people_list_page'] = array(
    'field_feature_layout_toggle' => 0,
    'field_feature_title_image' => 0,
    'field_footer' => 'field_footer',
    'field_header' => 'field_header',
    'field_intro' => 'field_intro',
    'field_sidebar_first' => 'field_sidebar_first',
    'field_sidebar_second' => 'field_sidebar_second',
    'field_slider' => 'field_slider',
    'field_wide_2' => 'field_wide_2',
    'field_inner_content_left' => 0,
    'field_inner_content_right' => 0,
    'field_content_bottom' => 0,
  );
  $settings['express_layout_settings_person'] = array(
    'field_feature_layout_toggle' => 0,
    'field_feature_title_image' => 0,
    'field_footer' => 'field_footer',
    'field_header' => 'field_header',
    'field_intro' => 'field_intro',
    'field_sidebar_first' => 'field_sidebar_first',
    'field_sidebar_second' => 'field_sidebar_second',
    'field_slider' => 'field_slider',
    'field_wide_2' => 'field_wide_2',
    'field_inner_content_left' => 0,
    'field_inner_content_right' => 0,
    'field_content_bottom' => 0,
  );
  $settings['express_layout_settings_photo_gallery'] = array(
    'field_feature_layout_toggle' => 0,
    'field_feature_title_image' => 0,
    'field_footer' => 'field_footer',
    'field_header' => 'field_header',
    'field_intro' => 'field_intro',
    'field_sidebar_first' => 'field_sidebar_first',
    'field_sidebar_second' => 'field_sidebar_second',
    'field_slider' => 'field_slider',
    'field_wide_2' => 'field_wide_2',
    'field_inner_content_left' => 0,
    'field_inner_content_right' => 0,
    'field_content_bottom' => 0,
  );
  $settings['express_layout_settings_video'] = array(
    'field_feature_layout_toggle' => 0,
    'field_feature_title_image' => 0,
    'field_footer' => 'field_footer',
    'field_header' => 'field_header',
    'field_intro' => 'field_intro',
    'field_sidebar_first' => 'field_sidebar_first',
    'field_sidebar_second' => 'field_sidebar_second',
    'field_slider' => 'field_slider',
    'field_wide_2' => 'field_wide_2',
    'field_inner_content_left' => 0,
    'field_inner_content_right' => 0,
    'field_content_bottom' => 0,
  );
  $settings['express_layout_settings_webform'] = array(
    'field_feature_layout_toggle' => 0,
    'field_feature_title_image' => 0,
    'field_footer' => 'field_footer',
    'field_header' => 'field_header',
    'field_intro' => 'field_intro',
    'field_sidebar_first' => 'field_sidebar_first',
    'field_sidebar_second' => 'field_sidebar_second',
    'field_slider' => 'field_slider',
    'field_wide_2' => 'field_wide_2',
    'field_inner_content_left' => 0,
    'field_inner_content_right' => 0,
    'field_content_bottom' => 0,
  );

  foreach ($settings as $key => $setting) {
    variable_set($key, $setting);
  }

  $types = array(
    'article',
    'article_list_page',
    'faqs',
    'page',
    'people_list_page',
    'person',
    'photo_gallery',
    'video',
    'webform',
  );
  foreach ($types as $key => $type) {
    $var = 'express_layout_type_' . $type;
    variable_set($var, $type);
  }
}
/**
 * Create inner content bottom layout field, updating layout configs.
 */
function express_layout_update_7001() {
  include 'express_layout.field_bases.inc';
  include 'express_layout.field_instances.inc';
  _express_layout_default_settings();
}
/**
 * Update layout configs.
 */
function express_layout_update_7002() {
  _express_layout_default_settings();
}
