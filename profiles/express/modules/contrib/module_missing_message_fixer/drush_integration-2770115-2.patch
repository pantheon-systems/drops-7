diff --git a/includes/module_missing_message_fixer.admin.inc b/includes/module_missing_message_fixer.admin.inc
index 993814c..6196781 100644
--- a/includes/module_missing_message_fixer.admin.inc
+++ b/includes/module_missing_message_fixer.admin.inc
@@ -5,19 +5,13 @@
  * The Missing Module Message Fixer Admin Settings file.
  */
 
+include_once 'module_missing_message_fixer.helpers.inc';
+
 /**
  * Missing Module Message Fixer Form.
  */
 function module_missing_message_fixer_form() {
-  $rows = $form = array();
-
-  // These are special modules that have their own patches already.
-  // This will help eliminate some of the brute force of this module.
-  $special = array(
-    'adminimal_theme' => 'https://www.drupal.org/node/2763581',
-    'content' => 'https://www.drupal.org/node/2763555',
-    'field_collection_table' => 'https://www.drupal.org/node/2764331',
-  );
+  $form = array();
 
   // Set the header.
   $header = array(
@@ -25,47 +19,8 @@ function module_missing_message_fixer_form() {
     'type' => 'Type',
     'filename' => 'Filename',
   );
-  // Grab all the modules in the system table.
-  $query = db_query("SELECT filename, type, name FROM {system}");
 
-  // Go through the query and check to see if the module exists in the directory.
-  foreach ($query->fetchAll() as $record) {
-    // Grab the checker.
-    $check = drupal_get_filename($record->type, $record->name, $record->filename, FALSE);
-
-    // If drupal_get_filename returns null = we got problems.
-    if (is_null($check) &&
-        $record->name != 'default' &&
-        !array_key_exists($record->name, $special)) {
-      // Go ahead and set the row if all is well.
-      $rows[$record->name] = array(
-        'name' => $record->name,
-        'type' => $record->type,
-        'filename' => $record->filename,
-      );
-    }
-    // Go ahead and print out a special message for the user.
-    elseif (array_key_exists($record->name, $special)) {
-      // Add exception to this since content module seems to be ubercart sad only.
-      if ($record->name == 'content' && !module_exists('ubercart')) {
-        $rows[$record->name] = array(
-          'name' => $record->name,
-          'type' => $record->type,
-          'filename' => $record->filename,
-        );
-      }
-      // Everyone else fails into here.
-      else {
-        // Set the message.
-        $msg =  t('The @module module has a patch. See <a href="@link" target="_blank">this issue</a> for more information.  It <strong>WILL NOT</strong> be removed by Module Missing Message Fixer.', array(
-          '@module' => $record->name,
-          '@link' => $special[$record->name],
-        ));
-        // Now print it!
-        drupal_set_message($msg, 'status', FALSE);
-      }
-    }
-  }
+  $rows = _module_missing_message_fixer_check_modules();
 
   // Fancy title string.
   $title = t('This list comes from the system table and is checked against the drupal_get_filename() function. See <a href="@link" target="_blank">this issue</a> for more information.', array(
diff --git a/includes/module_missing_message_fixer.drush.inc b/includes/module_missing_message_fixer.drush.inc
new file mode 100644
index 0000000..d783bfd
--- /dev/null
+++ b/includes/module_missing_message_fixer.drush.inc
@@ -0,0 +1,112 @@
+<?php
+/**
+ * @file
+ * Drush command file.
+ */
+
+include_once 'module_missing_message_fixer.helpers.inc';
+
+/**
+ * Implements hook_drush_command().
+ */
+function module_missing_message_fixer_drush_command() {
+  $items = array();
+
+  $items['module-missing-message-fixer-list'] = array(
+    'description' => dt('Returns a list of modules that have missing messages.'),
+    'aliases' => array(
+      'mmmfl',
+    ),
+    'bootstrap' => DRUSH_BOOTSTRAP_DRUPAL_FULL,
+    'engines' => array(
+      'outputformat' => array(
+        'default' => 'table',
+        'pipe-format' => 'json',
+        'field-labels' => array(
+          'name' => 'Name',
+          'type' => 'Type',
+          'filename' => 'Filename',
+        ),
+        'require-engine-capability' => array('format-table'),
+      ),
+    ),
+  );
+
+  $items['module-missing-message-fixer-fix'] = array(
+    'description' => dt('Fixes modules that have missing messages.'),
+    'aliases' => array(
+      'mmmff',
+    ),
+    'arguments' => array(
+      'name' => 'The name of the module to fix.',
+    ),
+    'options' => array(
+      'all' => dt('Fixes all module missing messages'),
+    ),
+    'bootstrap' => DRUSH_BOOTSTRAP_DRUPAL_FULL,
+    'engines' => array(
+      'outputformat' => array(
+        'default' => 'table',
+        'pipe-format' => 'json',
+        'field-labels' => array(
+          'name' => 'Name',
+          'type' => 'Type',
+          'filename' => 'Filename',
+        ),
+        'require-engine-capability' => array('format-table'),
+      ),
+    ),
+  );
+
+  return $items;
+}
+
+/**
+ * Implements hook_drush_help().
+ */
+function module_missing_message_fixer_drush_help($section) {
+  switch ($section) {
+    case 'module-missing-message-fixer-list':
+      return dt("Returns a list of modules that have missing messages.");
+
+  }
+}
+
+/**
+ * Drush command.
+ *
+ * Displays a list of modules that have missing messages.
+ */
+function drush_module_missing_message_fixer_list() {
+  $rows = _module_missing_message_fixer_check_modules();
+
+  return $rows;
+}
+
+/**
+ * Drush command.
+ *
+ * @param string $name
+ *        The name of the module to fix messages for.
+ */
+function drush_module_missing_message_fixer_fix($name = NULL) {
+  $module = array();
+
+  if (drush_get_option('all') != NULL) {
+    $rows = _module_missing_message_fixer_check_modules();
+
+    foreach ($rows as $row) {
+      $modules[] = $row['name'];
+    }
+  }
+  else {
+    $modules[] = $name;
+  }
+
+  // Delete if there is no modules.
+  if (count($modules) > 0) {
+    db_delete('system')
+      ->condition('name', $modules, 'IN')
+      ->execute();
+  }
+}
diff --git a/includes/module_missing_message_fixer.helpers.inc b/includes/module_missing_message_fixer.helpers.inc
new file mode 100644
index 0000000..9570a8d
--- /dev/null
+++ b/includes/module_missing_message_fixer.helpers.inc
@@ -0,0 +1,66 @@
+<?php
+
+/**
+ * @file
+ * Helper file.
+ */
+
+
+/**
+ * Helper function to check for modules to fix.
+ */
+function _module_missing_message_fixer_check_modules() {
+  $rows = array();
+
+  // These are special modules that have their own patches already.
+  // This will help eliminate some of the brute force of this module.
+  $special = array(
+    'adminimal_theme' => 'https://www.drupal.org/node/2763581',
+    'content' => 'https://www.drupal.org/node/2763555',
+    'field_collection_table' => 'https://www.drupal.org/node/2764331',
+  );
+
+  // Grab all the modules in the system table.
+  $query = db_query("SELECT filename, type, name FROM {system}");
+
+  // Go through the query and check to see if the module exists in the directory.
+  foreach ($query->fetchAll() as $record) {
+    // Grab the checker.
+    $check = drupal_get_filename($record->type, $record->name, $record->filename, FALSE);
+
+    // If drupal_get_filename returns null = we got problems.
+    if (is_null($check) &&
+        $record->name != 'default' &&
+        !array_key_exists($record->name, $special)) {
+      // Go ahead and set the row if all is well.
+      $rows[$record->name] = array(
+        'name' => $record->name,
+        'type' => $record->type,
+        'filename' => $record->filename,
+      );
+    }
+    // Go ahead and print out a special message for the user.
+    elseif (array_key_exists($record->name, $special)) {
+      // Add exception to this since content module seems to be ubercart sad only.
+      if ($record->name == 'content' && !module_exists('ubercart')) {
+        $rows[$record->name] = array(
+          'name' => $record->name,
+          'type' => $record->type,
+          'filename' => $record->filename,
+        );
+      }
+      // Everyone else fails into here.
+      else {
+        // Set the message.
+        $msg =  t('The @module module has a patch. See <a href="@link" target="_blank">this issue</a> for more information.  It <strong>WILL NOT</strong> be removed by Module Missing Message Fixer.', array(
+          '@module' => $record->name,
+          '@link' => $special[$record->name],
+        ));
+        // Now print it!
+        drupal_set_message($msg, 'status', FALSE);
+      }
+    }
+  }
+
+  return $rows;
+}
