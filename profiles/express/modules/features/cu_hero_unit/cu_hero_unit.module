<?php
/**
 * @file
 * Code for the Hero Unit feature.
 */

include_once 'cu_hero_unit.features.inc';

/**
 * Implements hook_page_alter().
 *
 */

function cu_hero_unit_page_alter(&$page) {
  drupal_add_css(drupal_get_path('module','cu_hero_unit') . '/css/cu_hero_unit.css');
}

/**
 * Implements hook_theme_registry_alter().
 *
 * Let Drupal know that we've got bean--articles.tpl.php in our module directory.
 */
function cu_hero_unit_theme_registry_alter(&$theme_registry) {
  $module_path = drupal_get_path('module', 'cu_hero_unit');
  $theme_registry_copy = $theme_registry;
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'bean', $module_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  $hooks = array('bean');
  foreach ($hooks as $h) {
	  if (isset($theme_registry[$h]['theme paths'])) {
	    $first_element = array_shift($theme_registry[$h]['theme paths']);
	    array_unshift($theme_registry[$h]['theme paths'], array_shift($theme_registry[$h]['theme paths']), $module_path);
  	}
  }
}

/**
 * Implements hook_preprocess_entity().
 *
 * Prepare render/tpl variables
 */
function cu_hero_unit_preprocess_entity(&$vars) {
  $entity_type = $vars['elements']['#entity_type'];
  $bundle = $vars['elements']['#bundle'];

  // Only preprocess hero unit beans.
  if ($entity_type == 'bean' && $bundle == 'hero_unit') {

    if (!empty($vars['content']['field_hero_unit_image'])) {
      $image = render($vars['content']['field_hero_unit_image']);
      $vars['image'] = trim(preg_replace('/\s+/', ' ', $image));

      // Render image for large displays
      $vars['content']['field_hero_unit_image'][0]['#image_style'] = 'hero';
      $image_large = render($vars['content']['field_hero_unit_image']);
      $vars['image_large'] = trim(preg_replace('/\s+/', ' ', $image_large));

      // Render image for medium displays
      $vars['content']['field_hero_unit_image'][0]['#image_style'] = 'large';
      $image_medium = render($vars['content']['field_hero_unit_image']);
      $vars['image_medium'] = trim(preg_replace('/\s+/', ' ', $image_medium));

      // Render image for small displays
      $vars['content']['field_hero_unit_image'][0]['#image_style'] = 'medium';
      $image_small = render($vars['content']['field_hero_unit_image']);
      $vars['image_small'] = trim(preg_replace('/\s+/', ' ', $image_small));
    }
    $vars['priority'] = isset($vars['content']['field_hero_unit_size_priority'][0]['#markup']) ? $vars['content']['field_hero_unit_size_priority'][0]['#markup'] : 'text';

    // Get bean ID so we can make a unique id
    $vars['bid'] = $vars['bean']->bid;

    // Build array of classes
    $classes_array = array();
    $classes_array[] = 'hero-unit';
    $classes_array[] = 'hero-unit-' . $vars['priority'];
    $classes_array[] = 'hero-size-' .  render($vars['content']['field_hero_unit_size'][0]['#markup']);
    $classes_array[] = 'hero-align-' . render($vars['content']['field_hero_unit_text_align'][0]['#markup']);
    $classes_array[] = 'hero-text-' . render($vars['content']['field_hero_unit_text_color'][0]['#markup']);
    $classes_array[] = 'hero-background-' . render($vars['content']['field_hero_unit_bg_color'][0]['#markup']);
    $classes_array[] = 'hero-links-' . render($vars['content']['field_hero_unit_link_color'][0]['#markup']);
    if (!empty($vars['field_hero_unit_overlay']) && $vars['field_hero_unit_overlay'][0]['value'] == 1) {
      $classes_array[] = 'hero-unit-overlay';
    }
    $vars['hero_classes'] = join(' ', $classes_array);
  }
}

/**
 * Background color options.
 */
function cu_hero_unit_bg_color_options() {
  $options = array(
    'white' => 'White',
    'gray' => 'Gray',
    'black' => 'Black',
    'dark_gray' => 'Dark Gray',
    'gold' => 'Gold',
    'tan' => 'Tan',
    'light_blue' => 'Light Blue',
  );
  return $options;
}
