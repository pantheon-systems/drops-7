<?php
/**
 * @file
 * Code for the Block Section feature.
 */

include_once 'cu_block_section.features.inc';

function cu_block_section_theme_registry_alter(&$theme_registry) {
  $module_path = drupal_get_path('module', 'cu_block_section');
  $theme_registry_copy = $theme_registry;
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'bean', $module_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  $hooks = array('node');
  foreach ($hooks as $h) {
    if (isset($theme_registry[$h]['theme paths'])) {
      $first_element = array_shift($theme_registry[$h]['theme paths']);
      array_unshift($theme_registry[$h]['theme paths'], array_shift($theme_registry[$h]['theme paths']), $module_path);
    }
  }
}

/*
 * Implements hook_page_alter().
 * adds custom css.
 *
 */

function cu_block_section_page_alter(&$page) {
  drupal_add_css(drupal_get_path('module', 'cu_block_section') . '/css/cu-block-section.css');
}

/*
 * renders beans as blocks so block titles, contextual links, etc are included.
 *
 */

function _cu_block_section_rerender($item) {
  $output = array();
    $bean = $item['entity'];
    $block = array();
    if (bean_access('view', $bean)) {
      // Most of this taken from bean_block_view().
      $block['content'] = $bean->view($bean->view_mode);
      $block['subject'] = $bean->title;
      $block['#theme_wrappers'] = array('block');
      $block['#block'] = (object) array(
        'region' => 'block_section',
        'module' => 'bean',
        'delta' => $bean->delta,
        'subject' => $bean->title,
      );
      
      if (module_exists('contextual')) {
        $block['#contextual_links']['bean'] = array(
          'block',
          array($bean->Identifier()),
        );
        $block['#contextual_links']['block'] = array(
          'admin/structure/block/manage',
          array($block['#block']->module, $block['#block']->delta),
        );
  
        // If it's a quicktab block, add an additional contextual link
        // and remove bean edit.
        if ($bean->type == 'quicktab') {
          $block['#contextual_links']['quicktabs'] = array(
            'admin/structure/quicktabs/manage',
            array($bean->delta),
          );
          unset($block['#contextual_links']['bean']);
        }
      } 
    }
    $output[$bean->bid] = $block; 
  return $output;  
}

/*
 * Implements hook_preprocess_entity().
 * prepares beans for tpl output.
 *
 */
function cu_block_section_preprocess_entity(&$vars) {
  $entity_type = $vars['elements']['#entity_type'];
  $bundle = $vars['elements']['#bundle'];
  $output = '';
  // Only preprocess block section beans.
  if ($entity_type == 'bean' && $bundle == 'block_section') {
    foreach ($vars['bean']->field_blocks_section_blocks[LANGUAGE_NONE] as $item) {
      $bean = _cu_block_section_rerender($item);
      $output .= render($bean);
    }
    $vars['content']['blocks'] = $output;
    
    // Add paddings for responsive output
    $padding['desktop'] = $vars['field_block_section_padding'][0]['safe_value'];
    $padding['tablet'] = $vars['field_block_section_tablet_pad'][0]['safe_value'];
    $padding['mobile'] = $vars['field_block_section_mobile_pad'][0]['safe_value'];
    
    
    // Render responsive sized images
    if (!empty($vars['content']['field_block_section_bg_image'])) {
      $image = render($vars['content']['field_block_section_bg_image']);
      $vars['image'] = trim(preg_replace('/\s+/', ' ', $image));
    
      // Render image for large displays
      $vars['content']['field_block_section_bg_image'][0]['#image_style'] = 'hero';
      $image_large = render($vars['content']['field_block_section_bg_image']);
      $vars['image_large'] = trim(preg_replace('/\s+/', ' ', $image_large));
      
      // Render image for medium displays
      $vars['content']['field_block_section_bg_image'][0]['#image_style'] = 'large';
      $image_medium = render($vars['content']['field_block_section_bg_image']);
      $vars['image_medium'] = trim(preg_replace('/\s+/', ' ', $image_medium));
      
      // Render image for small displays
      $vars['content']['field_block_section_bg_image'][0]['#image_style'] = 'medium';
      $image_small = render($vars['content']['field_block_section_bg_image']);
      $vars['image_small'] = trim(preg_replace('/\s+/', ' ', $image_small));
    }
    
    
    if (theme_get_setting('alpha_responsive', variable_get('theme_default'))) {
      $queries['tablet'] = theme_get_setting('alpha_layouts_alpha_default_narrow_media', variable_get('theme_default'));
      $queries['desktop'] = theme_get_setting('alpha_layouts_alpha_default_normal_media', variable_get('theme_default'));
      
      drupal_add_css(
        '#block-section-' . $vars['bean']->bid . ' .block-section-content { margin:' . $padding['mobile'] . '; }',
        array(
          'group' => CSS_THEME,
          'type' => 'inline',
          'media' => 'screen',
          'preprocess' => FALSE,
          'weight' => '9999',
        )
      );
      drupal_add_css(
        '#block-section-' . $vars['bean']->bid . ' .block-section-content { margin:' . $padding['tablet'] . '; }',
        array(
          'group' => CSS_THEME,
          'type' => 'inline',
          'media' => $queries['tablet'],
          'preprocess' => FALSE,
          'weight' => '9999',
        )
      );
      drupal_add_css(
        '#block-section-' . $vars['bean']->bid . ' .block-section-content { margin:' . $padding['desktop'] . '; }',
        array(
          'group' => CSS_THEME,
          'type' => 'inline',
          'media' => $queries['desktop'],
          'preprocess' => FALSE,
          'weight' => '9999',
        )
      );
      
      
      
    } else {
      drupal_add_css(
        '#block-section-' . $vars['bean']->bid . ' .block-section-content { margin:' . $padding['desktop'] . '; }',
        array(
          'group' => CSS_THEME,
          'type' => 'inline',
          'media' => 'screen',
          'preprocess' => FALSE,
          'weight' => '9999',
        )
      );
    }
  }
}


/*
 * Implements hook_form_alter().
 * Hides mobile and tablet padding fields if site is not repsonsive
 *
 */
function cu_block_section_form_bean_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#bundle'] == 'block_section') {
    if (!theme_get_setting('alpha_responsive', variable_get('theme_default'))) {
      $form['field_block_section_tablet_pad']['#access'] = FALSE;
      $form['field_block_section_mobile_pad']['#access'] = FALSE;
    }
  }
}

function _block_section_backgrounds() {
  return array(
    'hidden' => 'Hidden',
    'visible' => 'Transparent',
    'solid' => 'Solid',
  );
}
