<?php
/**
 * @file
 * Code for the Events Calendar Block feature.
 */

include_once 'cu_events_calendar_block.features.inc';

/**
 * Implements hook_theme_registry_alter().
 *
 * Let Drupal know that we've got node--person.tpl.php in our module directory.
 */
function cu_events_calendar_block_theme_registry_alter(&$theme_registry) {
  $module_path = drupal_get_path('module', 'cu_events_calendar_block');
  $theme_registry_copy = $theme_registry;
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'bean', $module_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);

  $hooks = array('bean');
  foreach ($hooks as $h) {
    if (isset($theme_registry[$h]['theme paths'])) {
      $first_element = array_shift($theme_registry[$h]['theme paths']);
      array_unshift($theme_registry[$h]['theme paths'], array_shift($theme_registry[$h]['theme paths']), $module_path);
    }
  }
}

/**
 * Implements hook_page_alter().
 */
function cu_events_calendar_block_page_alter(&$page) {
  // Add events css.
  drupal_add_css(drupal_get_path('module', 'cu_events_calendar_block') . '/events.css');
  drupal_add_css(drupal_get_path('module', 'cu_events_calendar_block') . '/events-grid.css');
  drupal_add_css(drupal_get_path('module', 'cu_events_calendar_block') . '/events-admin.css');
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter bean edit for for cu_events_calendar_block.
 */
function cu_events_calendar_block_form_bean_form_alter(&$form, &$form_state, $form_id) {
  if ($form['bean']['#value']->type == 'cu_events_calendar_block') {
    if (!empty($form['field_event_category'])) {
      $form['field_event_category']['#access'] = FALSE;
    }
    if (!isset($form_state['values'])) {
      $categories = array($form['field_event_categories'][LANGUAGE_NONE]['#default_value'][0]);
    }
    else {
      // @todo worry about multiple values
      foreach ($form_state['values']['field_event_categories'][LANGUAGE_NONE] as $cat) {
        $categories[] = $cat['value'];
      }
    }
    $form['field_event_categories'][LANGUAGE_NONE]['#description'] = t('Choose a category');
    $form['field_event_categories'][LANGUAGE_NONE]['#ajax'] = array(
      'callback' => 'cu_events_calendar_block_category_callback',
      'wrapper' => 'calendar-quick-link',
      'method' => 'replace',
      'effect' => 'fade',
    );

    if (isset($categories)) {
      $text = '';
      foreach ($categories as $cat) {
        $text .= $cat;
      }

      $ids = implode('%2c', $categories);
      $url = 'http://events.colorado.edu/default.aspx?type=&view=Summary&category=' . $ids . '&numdays=60';
      $link = l($url, $url);

      $form['calendar_link'] = array(
        '#title' => t("Link to the Campus Events Calendar"),
        '#type' => 'fieldset',
        '#prefix' => '<div id="calendar-quick-link">',
        '#suffix' => '</div>',
        '#description' => t('You can use this link for more events: !value', array('!value' => $link)),
        '#weight' => 3,
      );
    }
  }
  if ($form['bean']['#value']->type == 'events_calendar_grid') {
    $form['field_event_subcategories']['#access'] = FALSE;
    if (!empty($form['field_event_category'])) {
      $form['field_event_category']['#access'] = FALSE;
    }
  }
}

/**
 * TODO: Add func doc.
 */
function cu_events_calendar_block_category_callback($form, $form_state) {
  return $form['calendar_link'];
}

/**
 * TODO: Add func doc.
 */
function _cu_events_calendar_block_categories() {
  $categories = array();

  if (file_exists('/data/code/includes/categories.txt')) {
    $lines = file('/data/code/includes/categories.txt');
  }
  else {
    $lines = file('../../../code/dslm_base/includes/events_calendar/categories.txt');
  }
  foreach ($lines as &$line) {
    $category = explode('|', $line);
    $categories[$category[0]] = $category[1];
  }
  return $categories;
}

function _cu_events_calendar_templates() {
  return array(
    44 => 'Design 1 - Title, time & date',
    46 => 'Design 1 - Title, time, date & description',
    1048 => 'Design 1 - Title, image, time, date & description',
    1051 => 'Design 2 - Title, time & date',
    1052 => 'Design 2 - Title, time, date & description',
    1050 => 'Design 3 - Simple table (title & date)',
  );

}
