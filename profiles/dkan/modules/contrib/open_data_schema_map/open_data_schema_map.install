<?php

/**
 * @file
 * Schemas for schemas, open data style.
 */

/**
 * Implements hook_schema().
 */
function open_data_schema_map_schema() {
  $schema['open_data_schema_map'] = array(
    'description' => 'Stores open data schema mappings',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for an api.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The displayed name for an api.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'enabled' => array(
        'description' => 'Whether API is enabled.',
        'type' => 'int',
        'not null' => TRUE,
        'size' => 'tiny',
        'default' => 0,
      ),
      'machine_name' => array(
        'description' => 'The machine name for an api.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'api_schema' => array(
        'description' => 'The schema for an api.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'The displayed description for an api.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => 'The name of the entity type a mapping applies to (node, user, comment, etc.).',
      ),
      'bundle' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => 'The name of the bundle a mapping applies to.',
      ),
      'mapping' => array(
        'description' => 'The serialized mapping of the schema to fields.',
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
      'outputformat' => array(
        'description' => 'Output Format.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => True,
        'default' => 'json',
      ),
      'endpoint' => array(
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'description' => 'The name of the endpoint for the new API.',
      ),
      'arguments' => array(
        'description' => 'The serialized mapping of the arguments to fields.',
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}


/**
 *
 * Ensures that the output format field is in the table
 * Also sets outputformat to 'json' for all existing entries
 *
 */

function open_data_schema_map_update_7001() {

  $column = array(
    'type' => 'varchar',
    'description' => "Output Format",
    'length' => 20,
    'not null' => True,
    'default' => 'json',
  );

  $data_table_name = 'open_data_schema_map';
  if (!db_field_exists('open_data_schema_map', 'outputformat')) {
    db_add_field($data_table_name, 'outputformat', $column);
  }
}
