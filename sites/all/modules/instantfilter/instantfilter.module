<?php

/**
 * @file
 * Provides a Javascript utility to instantly filter data.
 */

/**
 * Implements hook_library().
 */
function instantfilter_library() {
  $module_path = drupal_get_path('module', 'instantfilter');

  $libraries['instantfilter'] = array(
    'title' => 'Instant Filter',
    'website' => 'http://drupal.org/project/instantfilter',
    'version' => '1.0',
    'js' => array(
      $module_path . '/instantfilter.js' => array(),
    ),
    'css' => array(
      $module_path . '/instantfilter.css' => array(),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_element_info().
 */
function instantfilter_element_info() {
  $types['instantfilter'] = array(
    '#input' => TRUE,
    '#process' => array('instantfilter_process_element'),
    '#theme_wrappers' => array('form_element'),
  );

  return $types;
}

/**
 * Form element process handler for the instantfilter form element.
 *
 * @param $element
 *   The form element to process. Properties used:
 *   - #instantfilter: An associative array containing:
 *     - container:
 *     - groups:
 *     - items:
 *     - empty:
 */
function instantfilter_process_element($element, &$form_state, $form) {
  $element['#tree'] = TRUE;
  if (!isset($element['#title'])) {
    $element['#title'] = t('Keyword search');
  }
  $element['#title_display'] = 'invisible';

  $element['filter'] = array(
    '#type' => 'textfield',
    // Use ID of instantfilter element so label points to this element.
    '#id' => $element['#id'],
    // Remove form element wrapper as the instantfilter element already has one.
    '#theme_wrappers' => array(),
    '#attributes' => array(
      'title' => isset($element['#title']) ? $element['#title'] : t('Enter keywords.'),
    ),
  );

  $element['submit'] = array(
    '#type' => 'submit',
    '#name' => 'instantfilter',
    '#value' => t('Filter'),
    '#submit' => array('instantfilter_form_submit'),
  );

  $settings = array();
  if (isset($element['#instantfilter']['container'])) {
    $settings['container'] = $element['#instantfilter']['container'];
  }
  elseif (isset($element['#array_parents'])) {
    $settings['container'] = '#' . $form['#id'];
  }

  if (isset($element['#instantfilter']['groups'])) {
    $settings['groups'] = $element['#instantfilter']['groups'];
  }

  if (isset($element['#instantfilter']['items'])) {
    $settings['items'] = $element['#instantfilter']['items'];
  }

  if (isset($element['#instantfilter']['empty'])) {
    $settings['empty'] = $element['#instantfilter']['empty'];
  }

  $element['#attached']['library'][] = array('instantfilter', 'instantfilter');
  $element['#attached']['js'][] = array('type' => 'setting', 'data' => array(
    'instantfilter' => array(
      $element['#id'] => $settings,
    ),
  ));

  return $element;
}

/**
 * Implements hook_form_FORM_ID_alter() for the system modules form.
 */
function instantfilter_form_system_modules_alter(&$form, $form_state) {
  // Do not alter the form when confirming.
  if (isset($form['confirm'])) {
    return;
  }

  $form['modulesfilter'] = array(
    '#type' => 'instantfilter',
    '#title' => t('Filter modules'),
    '#description' => t('Enter keywords to filter the list of modules.'),
    '#instantfilter' => array(
      'groups' => array(
        'fieldset' => array(),
        'fieldset table > tbody' => array('items' => 'tr', 'zebra' => TRUE)
      ),
      'items' => array(
        'table > tbody > tr' => array(
          'ignore' => 'td.version, .admin-requirements, td.help, td.permissions, td.configure',
        )
      ),
    ),
    '#weight' => -1,
  );
}

function instantfilter_form() {
  $form['filter'] = array(
    '#id' => 'edit-filter',
    '#type' => 'instantfilter',
    '#title' => t('Filter modules'),
    '#description' => t('Enter keywords to filter the list of modules.'),
    '#instantfilter' => array(
      'container' => '#block-system-main .admin',
      'groups' => array(
        'div.admin-panel' => array(),
      ),
      'items' => array(
        '.leaf' => array(
          //'ignore' => 'td.version, .admin-requirements, td.help, td.permissions, td.configure',
        )
      ),
    ),
    '#weight' => -1,
  );
  return $form;
}

/**
 * Implements hook_page_build().
 */
function instantfilter_page_build(&$page) {
  $item = menu_get_item();
  if ($item['path'] == 'admin/config') {
    $page['content']['system_main']['filter'] = drupal_get_form('instantfilter_form');
    $page['content']['system_main']['filter']['#weight'] = -1;
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for the user admin account form.
 */
function instantfilter_form_user_admin_account_alter(&$form, $form_state) {
  $form['options']['#weight'] = -5;

  $form['accountsfilter'] = array(
    '#type' => 'instantfilter',
    '#title' => t('Filter users'),
    '#instantfilter' => array(
      'groups' => array(
        'table > tbody' => array('items' => 'tr', 'zebra' => TRUE)
      ),
      'items' => array(
        'table > tbody > tr' => array(
          'ignore' => 'td:nth-child(1), td:nth-child(3), td:nth-child(4), td:nth-child(5), td:nth-child(6), td:nth-child(7)',
        )
      ),
    ),
    '#weight' => -1,
  );
}

/**
 * Implements hook_form_FORM_ID_alter() for the node admin content form.
 */
function instantfilter_form_node_admin_content_alter(&$form, $form_state) {
  if (!empty($form['admin']['options']['#access'])) {
    $form['admin']['options']['#weight'] = -5;
  }

  $form['admin']['nodesfilter'] = array(
    '#type' => 'instantfilter',
    '#title' => t('Filter content'),
    '#instantfilter' => array(
      'groups' => array(
        'table > tbody' => array('items' => 'tr', 'zebra' => TRUE)
      ),
      'items' => array(
        'table > tbody > tr' => array(
          'ignore' => 'td:nth-child(1), td:nth-child(3), td:nth-child(5), td:nth-child(6), td:nth-child(7)',
        )
      ),
    ),
    '#weight' => -1,
  );
}

/**
 * Implements hook_form_FORM_ID_alter() for the comment admin overview form.
 */
function instantfilter_form_comment_admin_overview_alter(&$form, $form_state) {
  $form['options']['#weight'] = -5;

  $form['commentsfilter'] = array(
    '#type' => 'instantfilter',
    '#title' => t('Filter comments'),
    '#instantfilter' => array(
      'groups' => array(
        'table > tbody' => array('items' => 'tr', 'zebra' => TRUE)
      ),
      'items' => array(
        'table > tbody > tr' => array(
          'ignore' => 'td:nth-child(1), td:nth-child(5), td:nth-child(6)',
        )
      ),
    ),
    '#weight' => -1,
  );
}

