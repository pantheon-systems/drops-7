<?php
/**
 * @file
 * Pantheon ApacheSolr module.
 *
 * Handles communication with the hyperion search system and associated settings.
 */

function pantheon_apachesolr_menu() {
  $items = array();
  $items['admin/config/search/pantheon'] = array(
    'title'              => 'Pantheon Solr Settings',
    'description'        => 'Configure Pantheon\'s Apache Solr, including selecting your schema.xml.',
    'page callback'      => 'drupal_get_form',
    'page arguments'     => array('pantheon_apachesolr_settings'),
    'access arguments'   => array('access administration pages'),
    'weight'             => -8,
  );
  return $items;
}

function pantheon_apachesolr_search_api_service_info_alter(array &$service_info) {
  // Change the Search API Solr Service class to our custom class. This approach is used for
  // Search API RC4 and greater which no longer uses the SolrPHP Client library.
  if (!function_exists('_search_api_solr_solrphpclient_path')) {
    // The Search API Solr service class is stored in a variable so that it can
    // be overridden if necessary to use the default SearchApiSolrService class.
    $service_info['search_api_solr_service']['class'] = variable_get('pantheon_apachesolr_search_api_solr_service_class', 'PantheonApachesolrSearchApiSolrService');
  }
}

function pantheon_apachesolr_curlopts() {
  return array(
    CURLOPT_HEADER => 1,
    CURLOPT_RETURNTRANSFER => 1,
    CURLOPT_TIMEOUT_MS => 5000,
    CURLOPT_CONNECTTIMEOUT_MS => 5000,
    CURLOPT_HTTPHEADER => array('Content-type:text/xml;', 'Expect:'),
  );
}

function pantheon_apachesolr_update_schema($schema) {
  $ch = curl_init();
  $host = 'index.'. variable_get('pantheon_tier', 'live') .'.getpantheon.com';
  $path = 'sites/self/environments/'. variable_get('pantheon_environment', 'dev') .'/index';
  $port = 449;
  // Figure out env var
  $client_cert = '../certs/binding.pem';
  $url = 'https://'. $host .'/'. $path;

  $file = fopen($schema, 'r');
  // set URL and other appropriate options
  $opts = array(
    CURLOPT_URL => $url,
    CURLOPT_PORT => $port,
    CURLOPT_RETURNTRANSFER => 1,
    CURLOPT_SSLCERT => $client_cert,
    CURLOPT_HTTPHEADER => array('Content-type:text/xml; charset=utf-8'),
    CURLOPT_PUT => TRUE,
    CURLOPT_BINARYTRANSFER => 1,
    CURLOPT_INFILE => $file,
    CURLOPT_INFILESIZE => filesize($schema),
  );
  curl_setopt_array($ch, $opts);
  $response = curl_exec($ch);
  fclose($file);
  if ($response == NULL) {
    watchdog('pantheon_apachesolr', "Error !error posting !schema to !url", array('!error' => curl_error($ch), '!schema' => $schema, '!url' => $url), WATCHDOG_ERROR);
  }
  else {
    variable_set('pantheon_apachesolr_schema', $schema);
  }

  return $response;
}

/**
 * Implementation of hook_form_FORM_ID_alter()
 *
 * Hides unnecessary settings from apachesolr.admin.inc.
 */
function pantheon_apachesolr_form_apachesolr_settings_alter(&$form, &$form_state, $form_id) {
  $form['apachesolr_host_settings']['note'] = array(
    '#type' => 'item',
    '#title' => t('Pantheon Notice'),
    '#markup' => '<p>'. t('You should not need to configure solr host connections: Pantheon is managing your Solr connection settings. However, you can use this admin interface to configure bias, facets, etc.') .'</p>',
    '#weight' => -10,
  );
  // We remove the "operations" part of the table, which was "edit" and "clone".
  // These aren't supported.
  unset($form['apachesolr_host_settings']['table']['#header'][3]);
  foreach($form['apachesolr_host_settings']['table']['#rows'] as $rid => $row) {
    unset($form['apachesolr_host_settings']['table']['#rows'][$rid]['data']['edit']);
    unset($form['apachesolr_host_settings']['table']['#rows'][$rid]['data']['clone']);
    unset($form['apachesolr_host_settings']['table']['#rows'][$rid]['data']['delete']);
  }
}

function pantheon_apachesolr_form_apachesolr_environment_edit_form_alter(&$form, &$form_state, $form_id) {
  $form['note'] = array(
    '#type' => 'item',
    '#title' => t('Pantheon Notice'),
    '#markup' => '<p>'. t('You should not need to configure solr host connections: Pantheon is managing your Solr connection settings. However, you can use this admin interface to configure bias, facets, etc.') .'</p>',
    '#weight' => -10,
  );
  unset($form['actions']['save']);
}


/**
 * Settings form for Pantheon's hyperion.
 *
 * Lets you choose a schema.xml file.
 */
function pantheon_apachesolr_settings($form, &$form_state) {
  $files = drupal_system_listing("/schema.*\.xml$/", "modules", 'uri', 0);
  $schemas = array();
  foreach($files as $file => $data) {
    $schemas[$data->uri] = $data->uri;
  }
  $form['schemas'] = array(
    '#type' => 'fieldset',
    '#title' => t('Solr Schema File'),
    '#description' => t('Pantheon identified the following schema.xml files in your Drupal installation. Select the one you want to use.'),
    '#weight' => -10,
  );
  if (count($schemas) > 0) {
    $form['schemas']['pantheon_apachesolr_schema'] = array(
      '#type' => 'radios',
      '#title' => t('Found schemas:'),
      '#options' => $schemas,
      '#default_value' => variable_get('pantheon_apachesolr_schema', ''),
    );
  }
  else {
    drupal_set_message(t('No schema.xml files found in your codebase! Are you sure you have the appropriate apachesolr module(s) installed?'), 'error');
  }
  $form['schemas']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Post schema'),
    '#options' => $schemas,
    '#submit' => array('pantheon_apachesolr_post_schema'),
  );

  // TODO: allow a file upload.

  return $form;
}

/**
 * Form submit handler.
 *
 * Post the schema, set the variable.
 */
function pantheon_apachesolr_post_schema($form, &$form_state) {
  $result = pantheon_apachesolr_update_schema($form_state['values']['pantheon_apachesolr_schema']);
  if ($result != NULL) {
    drupal_set_message(t('Updated Solr search schema.'));
  }
  else {
    drupal_set_message(t('There was an error updating the Solr search schema.'), 'error');
  }
}
