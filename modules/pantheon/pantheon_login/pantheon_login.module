<?php

/**
 * @file
 * Pantheon Login module.
 *
 * Sets up a special menu callback to log someone in from the control panel.
 */

/**
 * Implementation of hook_menu()
 */
function pantheon_login_menu() {
  $items = array();

  $items['user/pantheon_login'] = array(
    'title' => 'Pantheon login',
    'page callback' => 'pantheon_login_check',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Authentication callback.
 *
 * Checks a token from the $_GET superglobal against the API, and logs the
 * requesting browser in as user #1 if successful.
 */
function pantheon_login_check() {
  global $user;
  if ($user->uid != 1) {
    pantheon_api_load_api();
    $authorization = pantheon_api_get_authorization($_GET['YggToken']);
    if ($authorization !== FALSE) {
      $_SESSION['YggToken'] = $_GET['YggToken'];
      if ($user->uid == 0) {
        pantheon_login_finalize();
      }
      else {
        return drupal_get_form('pantheon_login_confirm_form');
      }
    }
    else {
      drupal_access_denied();
      exit;
    }
  }
  drupal_goto();
}

/**
 * Confirmation form.
 *
 * If the user was already logged in, don't trump that without asking.
 */
function pantheon_login_confirm_form() {
  global $user;
  drupal_set_title(t("Are you sure you want to switch users?"));
  $form['#submit'] = array('pantheon_login_finalize');
  return confirm_form($form,
    t('Are you sure you want to switch from %user (user #!uid) to user #1?', array('%user' => $user->name, '!uid' => $user->uid)),
    isset($_GET['destination']) ? $_GET['destination'] : '<front>',
    t('This will end your current user session and send you on as user #1.'),
    t('Switch'),
    t('Cancel')
  );
}

/**
 * Verification for confirmation form submission.
 *
 * This double-checks after a confirmation form. Belt and suspenders approach.
 */
function pantheon_login_confirm_form_validate($form, $form_state) {
  $auth = pantheon_api_get_authorization($_SESSION['YggToken']);
  if ($auth == FALSE) {
    form_set_error('token', t('Invalid authentication token.'));
  }
}

/**
 * Finalize a user #1 login.
 *
 * Route the user to the frontpage, unless there's a drupal_get_destination().
 */
function pantheon_login_finalize() {
  global $user;
  $account = user_load(1);
  $user = $account;
  $edit = array('name' => $account->name);
  user_login_finalize($edit);
  drupal_set_message(t('You have been logged in as user #1 by Pantheon.'));
  // Now clear the session and salt the earth.
  cache_set('pantheon-poison-'. $_SESSION['YggToken'], 1, 'cache', time() + 3600);
  unset($_SESSION['YggToken']);
  drupal_goto();
}
